@using System.Collections.Generic
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@*@using GM.WebApp.Data*@
@using GM.DatabaseAccess

@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
  ViewData["Title"] = "Log in";
}

@inject Microsoft.Extensions.Configuration.IConfiguration configuration

<div class="text-center">
  <br /><h1 class="display-4">Govmeeting</h1>
</div>

<h2>@ViewData["Title"]</h2>
<div class="row">
  <div class="col-md-8">
    <section>
      <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
        <h4>Use a local account</h4>
        <hr />
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
          <label asp-for="Email" class="col-md-2 control-label"></label>
          <div class="col-md-10">
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
          </div>
        </div>
        <div class="form-group">
          <label asp-for="Password" class="col-md-2 control-label"></label>
          <div class="col-md-10">
            <input asp-for="Password" class="form-control" />
            <span asp-validation-for="Password" class="text-danger"></span>
          </div>
        </div>
        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <div class="checkbox">
              <input asp-for="RememberMe" />
              <label asp-for="RememberMe"></label>
            </div>
          </div>
        </div>

        @{
          <!-- We use "false" as a string because there is an error if the check is for a boolean.-->
          if (!(configuration["IncludeReCaptcha"] == "false"))
          {
            <div class="g-recaptcha" data-sitekey="@(configuration["ReCaptcha:SiteKey"])"></div>
          }
        }

        <br>

        <div class="form-group">
          <div class="col-md-offset-2 col-md-10">
            <!--  Disable login except for development, until we are ready. -->
            <!-- TODO - remove this when ready -->
            <environment names="Development">
              <button type="submit" class="btn btn-default AccountButton">Log in</button>
            </environment>
            <environment names="Staging,Production">
              <button disabled type="submit" class="btn btn-default AccountButton">Log in</button>
            </environment>
          </div>
        </div>
        <p>
          <a asp-action="Register">Register as a new user?</a>
        </p>
        <p>
          <a asp-action="ForgotPassword">Forgot your password?</a>
        </p>
      </form>
    </section>
  </div>
  <div class="col-md-4">
    <section>
      <h4>Use another login service</h4>
      <hr />
      @{
                // Upgrade to SDK 2.0: Use GetExternalAuthenticationSchemesAsync
                var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                // var loginProviders = SignInManager.GetExternalAuthenticationSchemes().ToList();
                if (loginProviders.Count == 0)
                {
          <div>
            <p>
              There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                      for details on setting up this ASP.NET application to support logging in via external services.
            </p>
          </div>
                }
                else
                {
          <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">
            <div>
              <p>
                @foreach (var provider in loginProviders)
              {
                  <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
              // Upgrade to SDK 2.0
              // <button type="submit" class="btn btn-default" name="provider" value="@provider.AuthenticationScheme" title="Log in using your @provider.DisplayName account">@provider.AuthenticationScheme</button>
            }
              </p>
            </div>
          </form>
        }
      }
    </section>
  </div>
</div>

@* @await Html.PartialAsync("_DevNotePartial") *@

@section Scripts {
  @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
  <script src='https://www.google.com/recaptcha/api.js'></script>
}

@*<script src="https://www.google.com/recaptcha/api.js" async defer></script>*@